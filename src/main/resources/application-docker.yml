spring:
  # Database Configuration for Docker
  datasource:
    url: jdbc:postgresql://postgres:5432/catalog_db
    username: catalog_user
    password: catalog_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC

  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  # Kafka Configuration for Docker
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: schema-pipeline-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      properties:
        max.poll.interval.ms: 300000
        session.timeout.ms: 45000
        heartbeat.interval.ms: 10000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
      properties:
        retry.backoff.ms: 1000
        delivery.timeout.ms: 120000
    listener:
      ack-mode: MANUAL_IMMEDIATE
      concurrency: 1
      type: SINGLE
      missing-topics-fatal: false

# Application Configuration
server:
  port: 8080
  shutdown: graceful

# Topic Configuration
topics:
  input: events.input
  output: events.output
  dlt: events.dlt

# Kafka Producer Configuration
kafka:
  producer:
    sync-timeout-ms: 5000

# Logging Configuration
logging:
  level:
    org.beckn.catalog: INFO
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    kafka:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
